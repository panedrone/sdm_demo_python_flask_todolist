<?xml version="1.0" encoding="UTF-8"?>
<settings xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="settings.xsd">

    <!-- target: base folder of generated files (relative to the project root); -->
    <!-- sql: base folder of SQL files (relative to the project root); -->

    <folders target="dal" sql="sdm/sql"/>

    <!-- scope: (only Java and PHP) package name of DTO classes for Java or 
    namespace name of DTO classes for PHP; -->
    <!-- inheritance: (only Java) fully-qualified name of base class; example 
    for GWT: 1) inheritance="implements com.google.gwt.user.client.rpc.IsSerializable" 
    2) target class: public class Word implements com.google.gwt.user.client.rpc.IsSerializable... -->
    <!-- field-names-mode: (only Java) 0 - as column names; 1 - lowerCamelCase; 
    2 - lower_case; -->

    <dto scope="" inheritance="" field-names-mode="0" single-file=""/>

    <!-- scope: (only Java and PHP) package name of DAO classes for Java or 
    namespace name of DAO classes for PHP; -->

    <dao scope=""/>

    <!-- path: location of external VM file (relative to the project root); -->

    <external-vm-file path=""/>

    <ide event-log="true"/>

    <!-- class-prefix: prefix of generated C++ classes -->

    <cpp class-prefix=""/>

    <!-- jar: location of JDBC driver JAR file (relative to the project root); -->
    <!-- class: JDBC driver class name; -->
    <!-- url: JDBC connection URL (use $PROJECT_DIR$ or ${project_loc} if you need to specify project path); -->
    <!-- user: user name; -->
    <!-- pwd: password; -->

    <jdbc jar="sdm/sqlite-jdbc-3.30.1.jar" class="org.sqlite.JDBC"
          url="jdbc:sqlite:$PROJECT_DIR$/todo-list.sqlite" user="" pwd=""/>

    <type-map default="">

        <!-- ***** sqlalchemy (sa) ****************** -->

        <type detected="sa-java.lang.Short" target="${type}|0:SmallInteger"/>
        <type detected="sa-java.lang.Integer" target="${type}|0:Integer"/>
        <type detected="sa-java.lang.Long" target="${type}|0:BigInteger"/>

        <type detected="sa-java.lang.Float" target="${type}|0:Float"/>
        <type detected="sa-java.lang.Double" target="${type}|0:Float"/>
        <type detected="sa-java.math.BigDecimal" target="${type}|0:Float"/>

        <type detected="sa-java.util.Date" target="${type}|0:DateTime"/>
        <type detected="sa-java.lang.String" target="${type}|0:String"/>
        <type detected="sa-java.lang.Boolean" target="${type}|0:Boolean"/>
        <type detected="sa-byte[]" target="${type}|0:LargeBinary"/>

        <!-- ****** raw SQL ************************ -->

        <type detected="java.lang.Short" target="int"/>
        <type detected="java.lang.Integer" target="int"/>
        <type detected="java.lang.Long" target="long"/>

        <type detected="java.lang.Double" target="float"/>
        <type detected="java.lang.Float" target="float"/>
        <type detected="java.math.BigDecimal" target="float"/>

        <type detected="java.util.Date" target="str"/>
        <type detected="java.lang.String" target="str"/>
        <type detected="java.lang.Boolean" target="bool"/>
        <type detected="byte[]" target="bytes"/>

    </type-map>

    <global-macros>

        <!-- =built-in= is a key-word -->

        <global-macro name="${column}" value="=built-in="/>
        <global-macro name="${lower_snake_case(column)}" value="=built-in="/>
        <global-macro name="${camelCase(column)}" value="=built-in="/>
        <global-macro name="${TitleCase(column)}" value="=built-in="/>
        <global-macro name="${kebab-case(column)}" value="=built-in="/>

        <global-macro name="${sqlalchemy-params}" value="=built-in="/>

        <!-- go json tags: -->

        <global-macro name="${col}" value="${lower_snake_case(column)}"/>

        <global-macro name="${json}" value=" `json:&quot;${col}${0}&quot;`"/>

        <!-- sqlalchemy Column: -->

        <global-macro name="${type}" value="= Column('${column}', ${0}${sqlalchemy-params}${1})${comment}"/>

        <!-- TODO: for macros like "${vm:...}", the values are rendered by Apache Velocity -->

        <global-macro name="${vm:sqlalchemy-params}"
                      value="#if($fi.isPK()), primary_key=True#end#if($fi.isAI()), auto_increment=True#end"/>

        <!-- $fi in this ^^ example is a predefined parameter of class FieldInfo:

                    class FieldInfo:
                        String getName();
                        String getType();
                        String getColumnName();
                        boolean isAI();
                        boolean isPK();
                        String getComment();
                        String getterMethod();
                        String setterMethod();
                    -->

    </global-macros>

</settings>